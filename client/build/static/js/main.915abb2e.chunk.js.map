{"version":3,"sources":["components/sidedrawer/sidedrawer.js","components/navbar/navbar.js","components/speech/speechSynthesis.js","components/speech/button.js","components/speech/speech.js","components/card/card.js","components/main/main.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js","components/main/main.module.css","components/speech/style.js"],"names":["useStyles","makeStyles","list","width","fullList","keyss","Sidedrawer","props","classes","history","useHistory","React","useState","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","type","key","className","clsx","role","onClick","onKeyDown","Divider","List","map","text","index","pat","toLowerCase","axios","get","then","push","style","textDecoration","color","ListItem","button","ListItemText","primary","Fragment","children","Drawer","onClose","theme","root","flexGrow","menuButton","marginRight","spacing","Navbar","AppBar","position","Toolbar","variant","IconButton","edge","Typography","SpeechSynthesis","this","utterance","window","SpeechSynthesisUtterance","selected","getVoice","voice","replace","lang","pitch","parseFloat","rate","volume","func","onend","onerror","speechSynthesis","cancel","speak","pause","resume","voices","getVoices","find","name","undefined","Button","focus","hover","styles","Color","backgroundColor","enter","bind","leave","Object","assign","onMouseEnter","onMouseLeave","Component","maxWidth","withRouter","setAllNews","useEffect","a","console","log","location","pathname","resp","data","news","gettingNews","Card","App","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","module","exports","container","display","play","height","cursor","pointerEvents","outline","border","borderRadius","stop"],"mappings":"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","file":"static/js/main.915abb2e.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n});\n\nconst keyss = ['All', 'Automobile', 'Business', 'Entertainment', 'National', 'Politics', 'Science', 'Sports', 'Startups', 'Technology', 'World']\n\n// const URL=process.env.REACT_APP_SERVER_URL;\n\nexport default function Sidedrawer(props) {\n    const classes = useStyles();\n    let history = useHistory();\n\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const fetchNews= (pat) => {\n        axios.get(\"/fetch/\"+pat).then(()=> history.push('/'+pat));\n    }\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <h2> Categories</h2>\n            <Divider />\n            <List>\n                {keyss.map((text, index) => (\n                    <div onClick={() => fetchNews(text.toLowerCase())} style={{ textDecoration: \"none\", color: \"black\" }} key={text}>\n                        <ListItem button key={text}>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    </div>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div>\n            {['left'].map((anchor) => (\n                <React.Fragment key={anchor}>\n                    <Button onClick={toggleDrawer(anchor, true)}>{props.children}</Button>\n                    <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n                        {list(anchor)}\n                    </Drawer>\n                </React.Fragment>\n            ))}\n        </div>\n    );\n}\n\n// href={\"/fetch/\" + text.toLowerCase()}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Sidedrawer from '../sidedrawer/sidedrawer'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n}));\n\nexport default function Navbar() {\n    const classes = useStyles();\n\n    return (\n        <>\n            <div className={classes.root}>\n                <AppBar position=\"fixed\">\n                    <Toolbar variant=\"dense\">\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                            <Sidedrawer><MenuIcon /></Sidedrawer>\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" >\n                            News\n          </Typography>\n                    </Toolbar>\n                </AppBar>\n            </div>\n            <br />\n            <br />\n            <br />\n            <br />\n        </>\n    );\n}","export default class SpeechSynthesis {\n    constructor(props) {\n        this.utterance = new window.SpeechSynthesisUtterance();\n        this.selected = SpeechSynthesis.getVoice(props.voice);\n        this.utterance.voice = this.selected;\n        this.utterance.text = props.text.replace(/\\n/g, '');\n        this.utterance.lang = 'en-US';\n        this.utterance.pitch = parseFloat(props.pitch, 10) || 0.8;\n        this.utterance.rate = parseFloat(props.rate, 10) || 1;\n        this.utterance.volume = parseFloat(props.volume, 10) || 1;\n    }\n\n    static supported(selected) {\n        return window.speechSynthesis;\n    }\n\n    static getVoice(selected) {\n        const voices = window.speechSynthesis.getVoices();\n        const voice = voices.find(voice => voice.name === selected);\n        return voice !== undefined ? voice : voices[0];\n    }\n\n    onend(func) {\n        this.utterance.onend = func;\n    }\n\n    onerror(func) {\n        this.utterance.onerror = func;\n    }\n\n    speak() {\n        window.speechSynthesis.cancel();\n        window.speechSynthesis.speak(this.utterance);\n    }\n\n    pause() {\n        window.speechSynthesis.pause();\n    }\n\n    cancel() {\n        window.speechSynthesis.cancel();\n    }\n\n    resume() {\n        window.speechSynthesis.resume();\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Button extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            focus: false,\n            hover: false,\n            color: this.props.styles.button.Color,\n            backgroundColor: this.props.styles.button.backgroundColor\n        };\n        this.enter = this.enter.bind(this);\n        this.leave = this.leave.bind(this);\n    }\n\n    enter() {\n        this.setState({ hover: true });\n    }\n\n    leave() {\n        this.setState({ hover: false });\n    }\n\n    render() {\n        const backgroundColor = this.state.hover\n            ? this.props.styles.hover.backgroundColor\n            : this.state.backgroundColor;\n\n        // const color = this.state.hover\n        //     ? this.props.styles.hover.color\n        //     : this.state.color;\n\n        const style = Object.assign({}, this.props.styles.button, {\n            color: \"yellow\",\n            backgroundColor: backgroundColor\n        });\n\n        return (\n            <button\n                type=\"button\"\n                {...this.props}\n                style={style}\n                onMouseEnter={this.enter}\n                onMouseLeave={this.leave}\n            />\n        );\n    }\n}\n\nButton.propTypes = {\n    styles: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport style from './style';\nimport SpeechSynthesis from './speechSynthesis';\nimport Button from './button';\n\nexport default class Speech extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            styles: this.props.styles !== undefined ? this.props.styles : style\n        };\n        this.play = this.play.bind(this);\n        this.pause = this.pause.bind(this);\n        this.resume = this.resume.bind(this);\n        this.stop = this.stop.bind(this);\n        this.onend = this.onend.bind(this);\n        this.onerror = this.onerror.bind(this);\n    }\n\n    componentDidMount() {\n        this.setButtonState('all', 'none', 'none', 'none');\n    }\n\n    setButtonState(play, stop, pause, resume) {\n        var newState = update(this.state, {\n            styles: {\n                play: { button: { pointerEvents: { $set: play } } },\n                stop: { button: { pointerEvents: { $set: stop } } },\n                pause: { button: { pointerEvents: { $set: pause } } },\n                resume: { button: { pointerEvents: { $set: resume } } }\n            }\n        });\n\n        this.setState(newState);\n    }\n\n    setSpeechSynthesis() {\n        this.speechSynthesis = new SpeechSynthesis(this.props);\n        this.speechSynthesis.onend(this.onend);\n        this.speechSynthesis.onerror(this.onerror);\n    }\n\n    play() {\n        this.setSpeechSynthesis();\n        this.speechSynthesis.speak();\n        this.setButtonState('none', 'all', 'all', 'none');\n    }\n\n    pause() {\n        this.speechSynthesis.pause();\n        this.setButtonState('none', 'all', 'none', 'all');\n    }\n\n    resume() {\n        this.speechSynthesis.resume();\n        this.setButtonState('none', 'all', 'all', 'none');\n    }\n\n    stop() {\n        this.speechSynthesis.cancel();\n        this.setButtonState('all', 'none', 'none', 'none');\n    }\n\n    onend() {\n        this.stop();\n    }\n\n    onerror() {\n        this.stop();\n    }\n\n    render() {\n        if (this.props.disabled || !SpeechSynthesis.supported()) {\n            return (\n                <span className=\"rs-container\" style={this.state.styles.container}>\n                    <span className=\"rs-text\" style={this.state.styles.text}>\n                        {this.props.text}\n                    </span>\n                </span>\n            );\n        }\n\n        var play;\n        var stop;\n        var pause;\n        var resume;\n\n        if (this.props.textAsButton) {\n            play = (\n                <Button\n                    className=\"rs-play\"\n                    styles={this.state.styles.play}\n                    onClick={this.play}\n                >\n                    <span className=\"rs-text\" style={this.state.styles.text}>\n                        {this.props.displayText || this.props.text}\n                    </span>\n                </Button>\n            );\n        } else {\n            play = (\n                <Button\n                    className=\"rs-play\"\n                    styles={this.state.styles.play}\n                    onClick={this.play}\n                >\n                    <img width=\"10px\" src=\"https://img.icons8.com/ios/452/microphone.png\" alt=\"microphone\"/>\n                </Button>\n            );\n        }\n\n        if (this.props.stop) {\n            stop = (\n                <Button\n                    className=\"rs-stop\"\n                    styles={this.state.styles.stop}\n                    onClick={this.stop}\n                >\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={this.state.styles.stop.width}\n                        height={this.state.styles.stop.height}\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                        <path d=\"M6 6h12v12H6z\" />\n                    </svg>\n                </Button>\n            );\n        }\n\n        if (this.props.pause) {\n            pause = (\n                <Button\n                    className=\"rs-pause\"\n                    styles={this.state.styles.pause}\n                    onClick={this.pause}\n                >\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={this.state.styles.pause.width}\n                        height={this.state.styles.pause.height}\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" />\n                        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    </svg>\n                </Button>\n            );\n        }\n\n        if (this.props.resume) {\n            resume = (\n                <Button\n                    className=\"rs-resume\"\n                    styles={this.state.styles.resume}\n                    onClick={this.resume}\n                >\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={this.state.styles.resume.width}\n                        height={this.state.styles.resume.height}\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path d=\"M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z\" />\n                        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    </svg>\n                </Button>\n            );\n        }\n\n        return (\n            <span className=\"rs-container\" style={this.state.styles.container}>\n                {play} {stop} {pause} {resume}\n            </span>\n        );\n    }\n}\n\nSpeech.propTypes = {\n    styles: PropTypes.object,\n    text: PropTypes.string.isRequired,\n    pitch: PropTypes.string,\n    rate: PropTypes.string,\n    volume: PropTypes.string,\n    lang: PropTypes.string,\n    voiceURI: PropTypes.string,\n    voice: PropTypes.string,\n    textAsButton: PropTypes.bool,\n    displayText: PropTypes.string,\n    disabled: PropTypes.bool,\n    stop: PropTypes.bool,\n    pause: PropTypes.bool,\n    resume: PropTypes.bool\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Speech from '../speech/speech';\n\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n});\n\nexport default function ImgMediaCard(props) {\n    const classes = useStyles();\n\n\n    return (\n        <Card className={classes.root} style={{ marginRight: \"20px\", marginTop: \"20px\", position: \"relative\" }} >\n            <CardActionArea>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    image={props.imageUrl}\n                    title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {props.title+ \" \"}\n\n                        <Speech text={props.title} play={true} />\n\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {props.description}\n                        <br />\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n\n                <a href={props.url} style={{ position: \"absolute\", bottom: \"1px\", marginTop: \"0px\", textDecoration: \"none\", color: \"black\" }} >\n                    <Button size=\"small\" color=\"primary\" >\n                        Learn More\n        </Button>\n                </a>\n            </CardActions>\n\n        </Card >\n    );\n}","import React from 'react';\nimport classes from './main.module.css'\nimport Card from '../card/card'\nimport { withRouter } from \"react-router\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// const URL=process.env.REACT_APP_SERVER_URL;\n\nconst Main = (props) => {\n\n    const [allNews, setAllNews] = useState([]);\n\n    useEffect(() => {\n\n        const gettingNews = async () => {\n\n            console.log(props);\n\n            var pat = props.location.pathname;\n\n            if (pat === '/') pat = '/all'\n\n            const news = await axios.get(\"/getnews\"+pat).then(resp => resp.data);\n\n            // console.log(news);\n\n            setAllNews(news);\n\n        }\n\n        gettingNews();\n\n    }, [props])\n\n    // const dispNews = allNews.map((el, ind) => {\n\n    //     return <Card title={el.title} description={el.description} imageUrl={el.imageUrl} url={el.url} key={ind} />\n    // })\n\n    return (\n        <div className={classes.Card}>\n            Hi\n            {/* {dispNews} */}\n        </div>\n    )\n\n}\n\nexport default withRouter(Main);","import Navbar from './components/navbar/navbar'\nimport Main from './components/main/main'\nimport { Route } from 'react-router-dom'\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nfunction App() {\n    return (\n        <>\n            <Router>\n                <Route path='/' render={() => <Navbar style={{ position: \"fixed\" }} />} />\n                <Route path='/' component={() => <Main />} />\n            </Router>\n        </>\n    );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nserviceWorkerRegistration.register();\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"main_Card__2sDIM\"};","module.exports = {\n    container: {\n        width: '100%'\n    },\n    text: {\n        width: '100%',\n        display: ''\n    },\n    play: {\n        hover: {\n            backgroundColor: 'GhostWhite'\n        },\n        button: {\n            width: '25px',\n            height: '25px',\n            cursor: 'pointer',\n            pointerEvents: 'none',\n            outline: 'none',\n            backgroundColor: 'Gainsboro',\n            border: 'solid 1px rgba(255,255,255,1)',\n            borderRadius: 6\n        }\n    },\n    stop: {\n        hover: {\n            backgroundColor: 'GhostWhite'\n        },\n        button: {\n            width: '34',\n            height: '34',\n            cursor: 'pointer',\n            pointerEvents: 'none',\n            outline: 'none',\n            backgroundColor: 'Gainsboro',\n            border: 'solid 1px rgba(255,255,255,1)',\n            borderRadius: 6\n        }\n    },\n    pause: {\n        hover: {\n            backgroundColor: 'GhostWhite'\n        },\n        button: {\n            width: '34',\n            height: '34',\n            cursor: 'pointer',\n            pointerEvents: 'none',\n            outline: 'none',\n            backgroundColor: 'Gainsboro',\n            border: 'solid 1px rgba(255,255,255,1)',\n            borderRadius: 6\n        }\n    },\n    resume: {\n        hover: {\n            backgroundColor: 'GhostWhite'\n        },\n        button: {\n            width: '34',\n            height: '34',\n            cursor: 'pointer',\n            pointerEvents: 'none',\n            outline: 'none',\n            backgroundColor: 'Gainsboro',\n            border: 'solid 1px rgba(255,255,255,1)',\n            borderRadius: 6\n        }\n    }\n};"],"sourceRoot":""}